[{"C:\\Users\\Amanda Yu\\Documents\\VS Code Projects\\nwHack\\frontend\\src\\index.js":"1","C:\\Users\\Amanda Yu\\Documents\\VS Code Projects\\nwHack\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Amanda Yu\\Documents\\VS Code Projects\\nwHack\\frontend\\src\\App.js":"3","C:\\Users\\Amanda Yu\\Documents\\VS Code Projects\\nwHack\\frontend\\src\\components\\VisuallyImpaired.js":"4","C:\\Users\\Amanda Yu\\Documents\\VS Code Projects\\nwHack\\frontend\\src\\components\\AudioImpaired.js":"5","C:\\Users\\Amanda Yu\\Documents\\VS Code Projects\\nwHack\\frontend\\src\\components\\VIChatRoom.js":"6","C:\\Users\\Amanda Yu\\Documents\\VS Code Projects\\nwHack\\frontend\\src\\components\\AIChatRoom.js":"7"},{"size":500,"mtime":1610244408169,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1610244408169,"results":"10","hashOfConfig":"9"},{"size":968,"mtime":1610292805045,"results":"11","hashOfConfig":"9"},{"size":455,"mtime":1610293075979,"results":"12","hashOfConfig":"9"},{"size":524,"mtime":1610293075977,"results":"13","hashOfConfig":"9"},{"size":2249,"mtime":1610293075978,"results":"14","hashOfConfig":"9"},{"size":2299,"mtime":1610293075976,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rcwakz",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"25"},"C:\\Users\\Amanda Yu\\Documents\\VS Code Projects\\nwHack\\frontend\\src\\index.js",[],"C:\\Users\\Amanda Yu\\Documents\\VS Code Projects\\nwHack\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Amanda Yu\\Documents\\VS Code Projects\\nwHack\\frontend\\src\\App.js",[],"C:\\Users\\Amanda Yu\\Documents\\VS Code Projects\\nwHack\\frontend\\src\\components\\VisuallyImpaired.js",["33"],"import { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport VIChatRoom from './VIChatRoom';\r\n\r\nexport default function VisuallyImpaired() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <button>\r\n          <Link to=\"/\">Go Back</Link>\r\n        </button>\r\n        <h1>Visually Impaired</h1>\r\n      </header>\r\n\r\n      <section>\r\n        <VIChatRoom />\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n",["34","35"],"C:\\Users\\Amanda Yu\\Documents\\VS Code Projects\\nwHack\\frontend\\src\\components\\AudioImpaired.js",["36"],"C:\\Users\\Amanda Yu\\Documents\\VS Code Projects\\nwHack\\frontend\\src\\components\\VIChatRoom.js",[],"C:\\Users\\Amanda Yu\\Documents\\VS Code Projects\\nwHack\\frontend\\src\\components\\AIChatRoom.js",["37","38"],"import { useState, useRef } from 'react';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nimport axios from 'axios';\r\n\r\nfirebase.initializeApp({\r\n  apiKey: 'AIzaSyCl_pgIXTsrdIdOspvpZhIYRlZpsGElwz0',\r\n  authDomain: 'speech-text-301223.firebaseapp.com',\r\n  databaseURL: 'https://speech-text-301223-default-rtdb.firebaseio.com',\r\n  projectId: 'speech-text-301223',\r\n  storageBucket: 'speech-text-301223.appspot.com',\r\n  messagingSenderId: '846497528771',\r\n  appId: '1:846497528771:web:63192c2d0fb44468aedb76',\r\n  measurementId: 'G-K8WKB4EZHC',\r\n});\r\n\r\nconst firestore = firebase.firestore();\r\n\r\nexport default function AIChatRoom() {\r\n  const messagesRef = firestore.collection('messages');\r\n  const query = messagesRef.orderBy('createdAt').limit(25);\r\n  const [messages] = useCollectionData(query, { idField: 'id' });\r\n  const [formValue, setFormValue] = useState('');\r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n    await messagesRef.add({\r\n      text: formValue,\r\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n\r\n    setFormValue('');\r\n    updateBuffer('new message');\r\n  };\r\n\r\n  const updateBuffer = async (message) => {\r\n    axios\r\n      .post('http://localhost:5000/textToSpeech', {\r\n        text: message,\r\n      })\r\n      .then(async (res) => {\r\n        const buffer = res.data.speechBuffer;\r\n        const audioRef = firestore.collection('audio').doc('buffer');\r\n\r\n        await audioRef.set({\r\n          buffer,\r\n        });\r\n        console.log('message sent');\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <main>\r\n        <div class=\"center\">\r\n          {messages &&\r\n            messages.map((msg) => <ChatMessage key={msg.id} message={msg} />)}\r\n        </div>\r\n      </main>\r\n      <form onSubmit={sendMessage}>\r\n        <input\r\n          value={formValue}\r\n          onChange={(e) => setFormValue(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction ChatMessage(props) {\r\n  const { text } = props.message;\r\n  return (\r\n    <>\r\n      <img src=\"./avatar.jpg\" />\r\n      <p className=\"message\">{text}</p>\r\n    </>\r\n  );\r\n}\r\n",{"ruleId":"39","severity":1,"message":"40","line":14,"column":11,"nodeType":"41","messageId":"42","endLine":14,"endColumn":19},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"39","severity":1,"message":"47","line":6,"column":7,"nodeType":"41","messageId":"42","endLine":6,"endColumn":16},{"ruleId":"39","severity":1,"message":"48","line":1,"column":20,"nodeType":"41","messageId":"42","endLine":1,"endColumn":26},{"ruleId":"49","severity":1,"message":"50","line":58,"column":7,"nodeType":"51","endLine":58,"endColumn":33},"no-unused-vars","'observer' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["52"],"no-negated-in-lhs",["53"],"'firestore' is assigned a value but never used.","'useRef' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]