[{"C:\\Users\\jccoF\\Documents\\GitHub\\nwHack\\frontend\\src\\index.js":"1","C:\\Users\\jccoF\\Documents\\GitHub\\nwHack\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\jccoF\\Documents\\GitHub\\nwHack\\frontend\\src\\App.js":"3","C:\\Users\\jccoF\\Documents\\GitHub\\nwHack\\frontend\\src\\components\\VisuallyImpaired.js":"4","C:\\Users\\jccoF\\Documents\\GitHub\\nwHack\\frontend\\src\\components\\AudioImpaired.js":"5","C:\\Users\\jccoF\\Documents\\GitHub\\nwHack\\frontend\\src\\components\\VIChatRoom.js":"6","C:\\Users\\jccoF\\Documents\\GitHub\\nwHack\\frontend\\src\\components\\AIChatRoom.js":"7"},{"size":517,"mtime":1610255319382,"results":"8","hashOfConfig":"9"},{"size":375,"mtime":1610255319383,"results":"10","hashOfConfig":"9"},{"size":1027,"mtime":1610269540319,"results":"11","hashOfConfig":"9"},{"size":419,"mtime":1610267515418,"results":"12","hashOfConfig":"9"},{"size":413,"mtime":1610267516512,"results":"13","hashOfConfig":"9"},{"size":1173,"mtime":1610268350565,"results":"14","hashOfConfig":"9"},{"size":1640,"mtime":1610268350546,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1pben0k",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"C:\\Users\\jccoF\\Documents\\GitHub\\nwHack\\frontend\\src\\index.js",[],["33","34"],"C:\\Users\\jccoF\\Documents\\GitHub\\nwHack\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\jccoF\\Documents\\GitHub\\nwHack\\frontend\\src\\App.js",[],"C:\\Users\\jccoF\\Documents\\GitHub\\nwHack\\frontend\\src\\components\\VisuallyImpaired.js",[],"C:\\Users\\jccoF\\Documents\\GitHub\\nwHack\\frontend\\src\\components\\AudioImpaired.js",[],"C:\\Users\\jccoF\\Documents\\GitHub\\nwHack\\frontend\\src\\components\\VIChatRoom.js",["35"],"import { useState, useRef } from 'react';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\n\r\nconst firestore = firebase.firestore();\r\n\r\nexport default function VIChatRoom() {\r\n  const messagesRef = firestore.collection('messages'); \r\n  const query = messagesRef.orderBy('createdAt').limit(25);\r\n\r\n  const [messages] = useCollectionData(query, { idField: 'id' });\r\n  const [formValue, setFormValue] = useState('')\r\n\r\n  const sendMessage = async(e) => {\r\n    e.preventDefault();\r\n    await messagesRef.add({\r\n      text: formValue,\r\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n\r\n    setFormValue('');\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <main>\r\n        {messages &&\r\n          messages.map((msg) => <ChatMessage key={msg.id} message={msg} />)}\r\n      </main>\r\n\r\n      <form onSubmit={sendMessage}>\r\n        <input value={formValue} onChange={ (e) => setFormValue(e.target.value) }/>\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction ChatMessage(props) {\r\n  const {text} = props.message;\r\n  return <p>{text}</p>;\r\n}\r\n","C:\\Users\\jccoF\\Documents\\GitHub\\nwHack\\frontend\\src\\components\\AIChatRoom.js",["36"],"import { useState, useRef } from 'react';\r\nimport firebase from 'firebase/app'; //\r\nimport 'firebase/firestore';//\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore'; //\r\n\r\nfirebase.initializeApp({\r\n  apiKey: 'AIzaSyCl_pgIXTsrdIdOspvpZhIYRlZpsGElwz0',\r\n  authDomain: 'speech-text-301223.firebaseapp.com',\r\n  databaseURL: 'https://speech-text-301223-default-rtdb.firebaseio.com',\r\n  projectId: 'speech-text-301223',\r\n  storageBucket: 'speech-text-301223.appspot.com',\r\n  messagingSenderId: '846497528771',\r\n  appId: '1:846497528771:web:63192c2d0fb44468aedb76',\r\n  measurementId: 'G-K8WKB4EZHC',\r\n});\r\n\r\nconst firestore = firebase.firestore(); //\r\n\r\nexport default function AIChatRoom() {\r\n  const messagesRef = firestore.collection('messages'); //\r\n  const query = messagesRef.orderBy('createdAt').limit(25); //\r\n\r\n  const [messages] = useCollectionData(query, { idField: 'id' });  //\r\n  const [formValue, setFormValue] = useState('')\r\n\r\n  const sendMessage = async(e) => {\r\n    e.preventDefault();\r\n    await messagesRef.add({\r\n      text: formValue,\r\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n\r\n    setFormValue('');\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <main>\r\n        {messages &&\r\n          messages.map((msg) => <ChatMessage key={msg.id} message={msg} />)}\r\n      </main>\r\n      <form onSubmit={sendMessage}>\r\n        <input value={formValue} onChange={ (e) => setFormValue(e.target.value) }/>\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction ChatMessage(props) {\r\n  const {text} = props.message;\r\n  return <p className=\"message\">{text}</p>;\r\n}\r\n",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":1,"column":20,"nodeType":"43","messageId":"44","endLine":1,"endColumn":26},{"ruleId":"41","severity":1,"message":"42","line":1,"column":20,"nodeType":"43","messageId":"44","endLine":1,"endColumn":26},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]